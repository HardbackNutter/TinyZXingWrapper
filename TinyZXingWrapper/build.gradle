plugins {
    id("com.android.library")
    id("org.jetbrains.kotlin.android")
}

/*
    $HOME/.gradle/gradle.properties:
        TinyZXingWrapper.properties=$HOME/blah/blah/TinyZXingWrapper.properties

    $HOME/blah/blah/TinyZXingWrapper.properties:
        sign.storeFile=$HOME/blah/blah/keystore.jks
        sign.storePassword=MyStorePassword
        sign.keyAlias=MyKeyAlias
        sign.keyPassword=MyKeyPassword
 */
final def props = new Properties()
if (project.hasProperty("TinyZXingWrapper.properties")) {
    final def file = new File(project.property("TinyZXingWrapper.properties"))
    if (file.exists()) {
        props.load(new FileInputStream(file))
    }
}
kotlin {
    jvmToolchain rootProject.ext.toolChain
}

ext {
    // build version for the library
    tinyZXingWrapperVersion = "1.0.0"
}

android {
    namespace = "com.hardbacknutter.tinyzxingwrapper"
    compileSdk = rootProject.ext.compileSdkVersion

    resourcePrefix("tzw_")

    signingConfigs {
        release {
            storeFile file(props["sign.storeFile"])
            storePassword props["sign.storePassword"]
            keyAlias props["sign.keyAlias"]
            keyPassword props["sign.keyPassword"]
        }
    }

    defaultConfig {
        minSdk = rootProject.ext.minSdkVersion
        targetSdk = rootProject.ext.targetSdkVersion

        signingConfig(signingConfigs.release)

        testInstrumentationRunner = "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles("consumer-rules.pro")
    }

    buildTypes {
        debug {

        }
        release {
            minifyEnabled = false
            proguardFiles(getDefaultProguardFile("proguard-android-optimize.txt"),
                    "proguard-rules.pro")
        }
    }
    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_11
        targetCompatibility = JavaVersion.VERSION_17

        coreLibraryDesugaringEnabled = true
    }

    kotlinOptions {
        jvmTarget = rootProject.ext.toolChain
    }

    buildFeatures {
        buildConfig = true
    }

    lint {
        abortOnError = false
    }

    libraryVariants.configureEach {
        final variant -> variant.outputs.configureEach {
            outputFileName = "${project.name}-${variant.name}-${tinyZXingWrapperVersion}.aar"
        }
    }
}

dependencies {
    api("com.google.zxing:core:${zxingCoreVersion}")

    coreLibraryDesugaring("com.android.tools:desugar_jdk_libs_nio:${desugarVersion}")

    implementation("androidx.activity:activity-ktx:${androidxActivityVersion}")
    implementation("androidx.fragment:fragment-ktx:${androidxFragmentVersion}")
    implementation("androidx.lifecycle:lifecycle-viewmodel-ktx:${androidxLifecycleVersion}")
    implementation("androidx.lifecycle:lifecycle-livedata-ktx:$androidxLifecycleVersion")

    implementation("androidx.camera:camera-core:${androidxCardviewVersion}")
    implementation("androidx.camera:camera-camera2:${androidxCardviewVersion}")
    implementation("androidx.camera:camera-lifecycle:${androidxCardviewVersion}")
    implementation("androidx.camera:camera-view:${androidxCardviewVersion}")
    implementation("androidx.camera:camera-extensions:${androidxCardviewVersion}")

    // https://github.com/material-components/material-components-android/releases
    implementation("com.google.android.material:material:${googleMaterialVersion}")
}