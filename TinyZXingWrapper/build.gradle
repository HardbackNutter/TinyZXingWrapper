plugins {
    alias libs.plugins.android.library
    alias libs.plugins.android.kotlin
}

/*
    $HOME/.gradle/gradle.properties:
        TinyZXingWrapper.properties=$HOME/blah/blah/TinyZXingWrapper.properties

    $HOME/blah/blah/TinyZXingWrapper.properties:
        sign.storeFile=$HOME/blah/blah/keystore.jks
        sign.storePassword=MyStorePassword
        sign.keyAlias=MyKeyAlias
        sign.keyPassword=MyKeyPassword
 */
final def props = new Properties()
if (project.hasProperty("TinyZXingWrapper.properties")) {
    final def file = new File(project.property("TinyZXingWrapper.properties"))
    if (file.exists()) {
        props.load(new FileInputStream(file))
    }
}
kotlin {
    jvmToolchain rootProject.ext.toolChain
}

ext {
    // build version for the library
    // 1.1.1: WIP
    // 1.1.0: bugfix
    // 1.0.1: translations added, no lib code changes
    // 1.0.0: initial release
    tinyZXingWrapperVersion = "1.1.1"
}

android {
    namespace = "com.hardbacknutter.tinyzxingwrapper"
    compileSdk = rootProject.ext.compileSdkVersion

    resourcePrefix("tzw_")

    signingConfigs {
        release {
            storeFile file(props["sign.storeFile"])
            storePassword props["sign.storePassword"]
            keyAlias props["sign.keyAlias"]
            keyPassword props["sign.keyPassword"]
        }
    }

    defaultConfig {
        minSdk = rootProject.ext.minSdkVersion
        targetSdk = rootProject.ext.targetSdkVersion

        signingConfig(signingConfigs.release)

        testInstrumentationRunner = "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles("consumer-rules.pro")
    }

    buildTypes {
        debug {

        }
        release {
            minifyEnabled = false
            proguardFiles(getDefaultProguardFile("proguard-android-optimize.txt"),
                    "proguard-rules.pro")
        }
    }
    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_11
        targetCompatibility = JavaVersion.VERSION_17

        coreLibraryDesugaringEnabled = true
    }

    kotlinOptions {
        jvmTarget = rootProject.ext.toolChain
    }

    buildFeatures {
        buildConfig = true
    }

    lint {
        abortOnError = false
    }

    libraryVariants.configureEach {
        final variant ->
            variant.outputs.configureEach {
                outputFileName = "${project.name}-${variant.name}-${tinyZXingWrapperVersion}.aar"
            }
    }
}

dependencies {
    api(libs.zxing.core)

    coreLibraryDesugaring(libs.google.desugar)

    implementation(libs.androidx.activity)
    implementation(libs.androidx.fragment)
    implementation(libs.androidx.lifecycle.livedata)
    implementation(libs.androidx.lifecycle.viewmodel)

    implementation(libs.androidx.camera.camera2)
    implementation(libs.androidx.camera.core)
    implementation(libs.androidx.camera.lifecycle)
    implementation(libs.androidx.camera.view)
    implementation(libs.androidx.camera.extensions)

    implementation(libs.google.material)
}

tasks.register("javadocGenerate", Javadoc) {
    description "Generates Javadoc for the TinyZXingWrapper library"
    source = project.android.sourceSets.main.java.srcDirs
    options {
        setMemberLevel(JavadocMemberLevel.PUBLIC)
        links("https://developer.android.com/reference/")
    }
    // android.jar
    classpath += project.files(project.android.getBootClasspath())
    // androidx (and other) dependencies
    classpath += files(android.libraryVariants.collect { final variant ->
        variant.getJavaCompileProvider().get().classpath.files
    })
    failOnError false
}

tasks.register('javadocJar', Jar) {
    description = "Creates a Javadoc Jar for the TinyZXingWrapper library." +
            "The result can be found in 'build/outputs/docs/"
    dependsOn javadocGenerate
    from javadocGenerate.destinationDir
    // create a subfolder in the jar for all the html files
    into("docs")
    // Where to store the jar file
    destinationDirectory = project.layout.buildDirectory.dir("outputs/docs")
    archiveFileName = "${project.name}-docs-${tinyZXingWrapperVersion}.jar"
}
